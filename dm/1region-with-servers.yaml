imports:
- path: https://raw.githubusercontent.com/40net-cloud/fortinet-gcp-solutions/beta/FortiGate/modules-dm/fgcp-ha-ap-multilb.jinja
  name: fgcp-ha-ap-multilb.jinja
- path: https://raw.githubusercontent.com/40net-cloud/fortinet-gcp-solutions/master/FortiGate/architectures/300-peered-security-hub/deployment-manager/peerings.jinja
  name: peerings.jinja
- path: networks.jinja
- path: workload.jinja

# Update and uncomment 4 lines below to deploy with your own licenses
- path: ../licence1.lic
  name: lic1.lic
- path: ../licence2.lic
  name: lic2.lic

resources:
# Create a set of sample VPC networks and subnets
- type: networks.jinja
  name: Networks
  properties:
    region: europe-west1
    shortRegion: euwest1

# Peerings resource will peer all the VPCs together creating a hub-and-spoke topology
- name: Peerings
  type: peerings.jinja
  properties:
    prefix: wrkld
    hub:
      name: trust-vpc-euwest1
      url: $(ref.trust-vpc-euwest1.selfLink)
    spokes:
    - name: wrkld-spoke1-vpc-euwest1
      url: $(ref.wrkld-spoke1-vpc-euwest1.selfLink)
    - name: wrkld-spoke2-vpc-euwest1
      url: $(ref.wrkld-spoke2-vpc-euwest1.selfLink)
    deleteSpokeDefaultRoutes: true #this will trigger deletion of existing default route from spoke VPCs
# Explicit dependencies are needed as peerings cannot be created in parallel with custom routes
# native deployment manager explicit dependencies are nto supported for nested templates, so we need to emulate
    dependsOn:
    - fgt-trust-vpc-rt-to-wrkld-euwest1-via-fgt
    - fgt-trust-vpc-rt-to-onprem-via-fgt
    - fgt-trust-vpc-rt-default-via-fgt

# This section will deploy an A-P HA cluster of FortiGates in LB sandwich
- name: My_FortiGate_Cluster
  type: fgcp-ha-ap-multilb.jinja
  properties:
    prefix: fgt # optional. defaults to deployment name
    zones:
    - europe-west1-b
    - europe-west1-c
    instanceType: e2-standard-4 #optional. defaults to e2-standard-4
    license: #optional. default: payg
      type: byol
# Uncomment the lics section below to refer to your own BYOL licenses
      lics:
      - lic1.lic
      - lic2.lic
    serialPortEnable: false
    networks:
    # Replace vpcLink, subnetLink URLs and adapt ipCidrRange CIDRs for all networks
    # in this section if reusing this configuration with your existing VPCs
    - name: untrust-vpc
      vpcLink: $(ref.untrust-vpc-global.selfLink)
      subnetLink: $(ref.untrust-sb-euwest1.selfLink)
      ipCidrRange: 172.20.0.0/24
      serviceIPs: # this section triggers creation of ELB and EIP
      - name: serv1
      routes: # this section triggers creation of ILB
      - destRange: 10.0.0.0/9
        name: to-wrkld-euwest1
      - destRange: 10.127.0.0/16
        name: to-psa-euwest1
    - name: trust-vpc
      vpcLink: $(ref.trust-vpc-euwest1.selfLink)
      subnetLink: $(ref.trust-sb-euwest1.selfLink)
      ipCidrRange: 172.20.1.0/24
      routes:
      - destRange: 0.0.0.0/0
        name: default
      - destRange: 192.168.0.0/16
        name: to-onprem
      - destRange: 10.0.0.0/9
        name: to-wrkld-euwest1
    - name: hasync
      vpcLink: $(ref.fgt-hasync-vpc.selfLink)
      subnetLink: $(ref.fgt-hasync-sb-euwest1.selfLink)
      ipCidrRange: 172.20.2.0/24
    - name: management
      vpcLink: $(ref.fgt-mgmt-vpc.selfLink)
      subnetLink: $(ref.fgt-mgmt-sb-euwest1.selfLink)
      ipCidrRange: 172.20.3.0/24
      externalIP:
        name: mgmt
    fwConfig: |
      config router static
        edit 11
          set dst 10.0.0.0/9
          set device port2
          set gateway 172.20.1.1
        next
      end
      config system dns
        set primary 169.254.169.254
        unset secondary
      end
      config firewall address
        edit "wrkld-spoke1-sb-euwest1"
          set type dynamic
          set sdn "gcp_conn"
          set color 17
          set filter "Subnet=wrkld-spoke1-sb-euwest1"
        next
        edit "wrkld-spoke2-sb-euwest1"
          set type dynamic
          set sdn "gcp_conn"
          set color 17
          set filter "Subnet=wrkld-spoke2-sb-euwest1"
        next
        edit "gcp-frontend"
          set type dynamic
          set sdn "gcp_conn"
          set color 17
          set filter "Tag=frontend"
        next
        edit "gcp-backend"
          set type dynamic
          set sdn "gcp_conn"
          set color 17
          set filter "Tag=backend"
        next
        edit "gcp-ilb-backend"
          set type fqdn
          set fqdn "app.wrkld-ilb-backend.il4.europe-west1.lb.forti-emea-se.internal"
          set color 17
        next
        edit "wrkld-ilb-frontend"
          set type fqdn
          set fqdn "prx.wrkld-ilb-frontend.il4.europe-west1.lb.forti-emea-se.internal"
          set color 17
        next
      end
      config firewall vip
        edit "serv1-to-frontend"
          set extip $(ref.fgt-serv1.address)
          set type fqdn
          set extintf "port1"
          set mapped-addr "wrkld-ilb-frontend"
          set portforward enable
          set extport 80
          set mappedport 8080
        next
      end
      config firewall policy
        edit 1
          set name "wrkld-to-inet"
          set srcintf "port2"
          set dstintf "port1"
          set action accept
          set srcaddr "wrkld-spoke1-sb-euwest1" "wrkld-spoke2-sb-euwest1"
          set dstaddr "all"
          set schedule "always"
          set service "ALL"
          set utm-status enable
          set ssl-ssh-profile "certificate-inspection"
          set av-profile "default"
          set webfilter-profile "default"
          set dnsfilter-profile "default"
          set ips-sensor "default"
          set application-list "default"
          set nat enable
          set ippool enable
          set poolname "fgt-serv1"
          set logtraffic all
        next
        edit 2
          set name "front-to-backend"
          set srcintf "port2"
          set dstintf "port2"
          set action accept
          set srcaddr "gcp-frontend"
          set dstaddr "gcp-ilb-backend"
          set schedule "always"
          set service "ALL"
          set utm-status enable
          set ssl-ssh-profile "certificate-inspection"
          set av-profile "default"
          set ips-sensor "default"
          set nat disable
          set logtraffic all
        next
        edit 3
          set name "serv1-to-frontend-tcp80-allow"
          set srcintf "port1"
          set dstintf "port2"
          set action accept
          set srcaddr "all"
          set dstaddr "serv1-to-frontend"
          set schedule "always"
          set service "ALL"
          set utm-status enable
          set ssl-ssh-profile "certificate-inspection"
          set av-profile "default"
          set ips-sensor "default"
          set logtraffic all
        next
      end

# example web server and a proxy

- name: wrkld-dnspeer-spoke2-spoke1
  type: dns.v1.managedZone
  properties:
    dnsName: "wrkld-ilb-backend.il4.europe-west1.lb.forti-emea-se.internal."
    description: ""
    peeringConfig:
      targetNetwork:
        networkUrl: $(ref.wrkld-spoke2-vpc-euwest1.selfLink)
    privateVisibilityConfig:
      networks:
      - networkUrl: $(ref.wrkld-spoke1-vpc-euwest1.selfLink)
    visibility: private
- name: wrkld-dnspeer-spoke1-hub
  type: dns.v1.managedZone
  properties:
    dnsName: "wrkld-ilb-frontend.il4.europe-west1.lb.forti-emea-se.internal."
    description: ""
    peeringConfig:
      targetNetwork:
        networkUrl: $(ref.wrkld-spoke1-vpc-euwest1.selfLink)
    privateVisibilityConfig:
      networks:
      - networkUrl: $(ref.untrust-vpc-global.selfLink)
    visibility: private
- name: wrkld-dnspeer-spoke2-hub
  type: dns.v1.managedZone
  properties:
    dnsName: "wrkld-ilb-backend.il4.europe-west1.lb.forti-emea-se.internal."
    description: ""
    peeringConfig:
      targetNetwork:
        networkUrl: $(ref.wrkld-spoke1-vpc-euwest1.selfLink)
    privateVisibilityConfig:
      networks:
      - networkUrl: $(ref.untrust-vpc-global.selfLink)
    visibility: private

- name: Workload
  type: workload.jinja
  properties:
    region: europe-west1
    frontendVpc: $(ref.wrkld-spoke1-vpc-euwest1.selfLink)
    frontendSubnet: $(ref.wrkld-spoke1-sb-euwest1.selfLink)
    backendVpc: $(ref.wrkld-spoke2-vpc-euwest1.selfLink)
    backendSubnet: $(ref.wrkld-spoke2-sb-euwest1.selfLink)

outputs:
- name: Temporary Admin Password
  value: $(ref.My_FortiGate_Cluster.defaultPassword)
- name: Management IPs
  value: $(ref.My_FortiGate_Cluster.mgmtPublicIPs)
- name: Web Service IP
  value: $(ref.fgt-serv1.address)
