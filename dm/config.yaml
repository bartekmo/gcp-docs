imports:
- path: https://raw.githubusercontent.com/40net-cloud/fortinet-gcp-solutions/beta/FortiGate/modules-dm/fgcp-ha-ap-multilb.jinja
  name: fgcp-ha-ap-multilb.jinja
- path: https://raw.githubusercontent.com/40net-cloud/fortinet-gcp-solutions/master/FortiGate/architectures/300-peered-security-hub/deployment-manager/peerings.jinja
  name: peerings.jinja

# Update and uncomment 4 lines below to deploy with your own licenses
- path: ../licence1.lic
  name: lic1.lic
- path: ../licence2.lic
  name: lic2.lic

resources:
# Create a sample set of VPC Networks with subnets.
# this helper template can also create 2 sample spoke VPCs
# You will not need it if you re-use this configuration with your VPCs
- name: untrust-vpc-global
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: false
- name: untrust-sb-euwest1
  type: compute.v1.subnetwork
  properties:
    region: europe-west1
    network: $(ref.untrust-vpc-global.selfLink)
    ipCidrRange: 172.20.0.0/24

- name: trust-vpc-euwest1
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: false
- name: trust-sb-euwest1
  type: compute.v1.subnetwork
  properties:
    region: europe-west1
    network: $(ref.trust-vpc-euwest1.selfLink)
    ipCidrRange: 172.20.1.0/24

- name: fgt-hasync-vpc
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: false
- name: fgt-hasync-sb-euwest1
  type: compute.v1.subnetwork
  properties:
    region: europe-west1
    network: $(ref.fgt-hasync-vpc.selfLink)
    ipCidrRange: 172.20.2.0/24

- name: fgt-mgmt-vpc
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: false
- name: fgt-mgmt-sb-euwest1
  type: compute.v1.subnetwork
  properties:
    region: europe-west1
    network: $(ref.fgt-mgmt-vpc.selfLink)
    ipCidrRange: 172.20.3.0/24

- name: spoke1-vpc-euwest1
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: false
- name: spoke1-sb-euwest1
  type: compute.v1.subnetwork
  properties:
    region: europe-west1
    network: $(ref.spoke1-vpc-euwest1.selfLink)
    ipCidrRange: 10.0.1.0/24
- name: wrkld-spoke1-euwest1-allowall
  type: compute.v1.firewall
  properties:
    network: $(ref.spoke1-vpc-euwest1.selfLink)
    priority: 100
    sourceRanges:
    - 0.0.0.0/0
    allowed:
    - IPProtocol: all

- name: spoke2-vpc-euwest1
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: false
- name: spoke2-sb-euwest1
  type: compute.v1.subnetwork
  properties:
    region: europe-west1
    network: $(ref.spoke2-vpc-euwest1.selfLink)
    ipCidrRange: 10.0.2.0/24
- name: wrkld-spoke2-euwest1-allowall
  type: compute.v1.firewall
  properties:
    network: $(ref.spoke2-vpc-euwest1.selfLink)
    priority: 100
    sourceRanges:
    - 0.0.0.0/0
    allowed:
    - IPProtocol: all

# Peerings resource will peer all the VPCs together creating a hub-and-spoke topology
- name: Peerings
  type: peerings.jinja
  properties:
    prefix: wrkld
    hub:
      name: trust-vpc-euwest1
      url: $(ref.trust-vpc-euwest1.selfLink)
    spokes:
    - name: spoke1-vpc-euwest1
      url: $(ref.spoke1-vpc-euwest1.selfLink)
    - name: spoke2-vpc-euwest1
      url: $(ref.spoke2-vpc-euwest1.selfLink)
    deleteSpokeDefaultRoutes: true #this will trigger deletion of existing default route from spoke VPCs
# Explicit dependencies are needed as peerings cannot be created in parallel with custom routes
# native deployment manager explicit dependencies are nto supported for nested templates, so we need to emulate
    dependsOn:
    - fgt-trust-vpc-rt-to-wrkld-euwest1-via-fgt
    - fgt-trust-vpc-rt-to-onprem-via-fgt
    - fgt-trust-vpc-rt-default-via-fgt

# This section will deploy an A-P HA cluster of FortiGates in LB sandwich
- name: My_FortiGate_Cluster
  type: fgcp-ha-ap-multilb.jinja
  properties:
    prefix: fgt # optional. defaults to deployment name
    zones:
    - europe-west1-b
    - europe-west1-c
    instanceType: e2-standard-4 #optional. defaults to e2-standard-4
    license: #optional. default: payg
      type: byol
# Uncomment the lics section below to refer to your own BYOL licenses
      lics:
      - lic1.lic
      - lic2.lic
    serialPortEnable: false
    networks:
    # Replace vpcLink, subnetLink URLs and adapt ipCidrRange CIDRs for all networks
    # in this section if reusing this configuration with your existing VPCs
    - name: untrust-vpc
      vpcLink: $(ref.untrust-vpc-global.selfLink)
      subnetLink: $(ref.untrust-sb-euwest1.selfLink)
      ipCidrRange: 172.20.0.0/24
      serviceIPs: # this section triggers creation of ELB and EIP
      - name: serv1
      routes: # this section triggers creation of ILB
      - destRange: 10.0.0.0/9
        name: to-wrkld-euwest1
      - destRange: 10.127.0.0/16
        name: to-psa-euwest1
    - name: trust-vpc
      vpcLink: $(ref.trust-vpc-euwest1.selfLink)
      subnetLink: $(ref.trust-sb-euwest1.selfLink)
      ipCidrRange: 172.20.1.0/24
      routes:
      - destRange: 0.0.0.0/0
        name: default
      - destRange: 192.168.0.0/16
        name: to-onprem
      - destRange: 10.0.0.0/9
        name: to-wrkld-euwest1
    - name: hasync
      vpcLink: $(ref.fgt-hasync-vpc.selfLink)
      subnetLink: $(ref.fgt-hasync-sb-euwest1.selfLink)
      ipCidrRange: 172.20.2.0/24
    - name: management
      vpcLink: $(ref.fgt-mgmt-vpc.selfLink)
      subnetLink: $(ref.fgt-mgmt-sb-euwest1.selfLink)
      ipCidrRange: 172.20.3.0/24
      externalIP:
        name: mgmt
# Add routes for spoke1 and spoke2 networks to FortiGates internal routing table
    fwConfig: |
      config router static
      edit 11
      set dst 10.0.0.0/9
      set device port2
      set gateway 172.20.1.1
      next
      end


outputs:
- name: Temporary Admin Password
  value: $(ref.My_FortiGate_Cluster.defaultPassword)
- name: Management IPs
  value: $(ref.My_FortiGate_Cluster.mgmtPublicIPs)
